{"version":3,"sources":["helpers/logger.js","helpers/crash-reporter.js","actions/sessions.js","actions/settings.js","reducers/settings.js","helpers/reduce-ellapsed-time.js","helpers/get-time-from-hours-and-minutes.js","reducers/sessions.js","reducers/index.js","components/TopNav.jsx","helpers/format-time.js","views/SessionsView.jsx","helpers/by-start-time.js","components/Setting.jsx","components/AboutDialog.jsx","views/SettingsView.jsx","components/EllapsedTime.jsx","helpers/calculate-earned-salary.js","components/EarnedSalary.jsx","components/TimeDisplay.jsx","components/ToggleButton.jsx","components/StartButton.jsx","components/PauseButton.jsx","components/TitleField.jsx","views/TimerView.jsx","views/DebugView.jsx","components/ViewLoader.jsx","components/BottomNav.jsx","helpers/supports-passive.js","components/PreventAccidentalClosure.jsx","components/App.jsx","theme.js","helpers/break-notifier.js","helpers/analytics.js","serviceWorker.js","index.js"],"names":["logger","store","next","action","Raven","config","install","crashReporter","err","captureException","extra","state","getState","START_TIMER_MIDDLEWARE","START_TIMER","STOP_TIMER_MIDDLEWARE","STOP_TIMER","startTimerMiddleware","type","payload","actionName","timerName","earnedSalary","stopTimerMiddleware","setBreakHasBeenNotified","setDisplayAboutDialog","value","settingActionCreators","setDisplayEarnedSalary","setHourlyRate","setEnableBreaks","setRememberSettings","setEnableNotifications","setSessionDuration","defaultSettings","showEarnedSalary","hourlyRate","rememberSettings","sessionDuration","enableBreaks","notifications","displayAboutDialog","validateParts","parts","forEach","part","Error","Object","keys","key","constructor","Date","concat","calculateEllapsedTime","a","b","_map","map","x","getTime","_map2","slicedToArray","c","d","Math","abs","reduceEllapsedTime","Array","reduce","ellapsedTime","nextPart","startTime","stopTime","getTimeFromHnMs","string","_string$split","split","_string$split2","hours","minutes","date","setHours","setMinutes","defaultSession","currentSession","title","EarnedSalary","breakHasBeenNotified","sessions","combineReducers","arguments","length","undefined","_ref","objectSpread","toConsumableArray","window","location","hash","getTimeFromHoursAndMinutes","history","replaceState","document","trim","filter","session","settings","Number","withStyles","appName","classes","react_default","createElement","AppBar_default","className","root","position","color","Toolbar_default","Typography_default","variant","modAndRound","factor","floor","format_time","seconds","filterZeros","values","units","splice","unitIndex","i","_ref2","reverse","join","_ref3","formatValues","factors","division","push","convertToValues","connect","dispatch","onDelete","reversed","props","objectWithoutProperties","List_default","assign","subheader","ListSubheader_default","sort","aT","bT","ListItem_default","threeLines","ListItemAvatar_default","Avatar_default","slice","toUpperCase","ListItemText_default","primary","secondary","moment","format","formatTime","ListItemSecondaryAction_default","IconButton_default","aria-label","onClick","Delete_default","disabled","style","textAlign","fontWeight","Setting","label","onChange","Icon","ListItemIcon_default","Switch_default","checked","target","AboutDialog","onAboutDialogClose","Dialog_default","open","onClose","aria-labelledby","DialogTitle_default","id","dense","version","author","name","href","url","rel","padding","Grid_default","container","alignContent","spacing","item","Button_default","element","email","_ref4","onSettingChange","setting","onAboutDialogOpen","theme","paddingBottom","unit","backgroundColor","palette","background","paper","textFieldIcon","showAboutDialogButton","display","margin","components_Setting","AttachMoney_default","TextField_default","placeholder","min","WatchLater_default","InputProps","endAdornment","InputAdornment_default","Notification","requestPermission","then","result","navigator","serviceWorker","ready","Feedback_default","components_AboutDialog","EllapsedTime","timeUntilBreak","_ref2$settings","max","calculateEarnedSalary","ceil","TimeDisplay","components_EllapsedTime","components_EarnedSalary","ToggleButton","primaryLabel","secondaryLabel","PrimaryIcon","SecondaryIcon","condition","onButtonClick","Tooltip_default","_ref2$sessions$curren","active","components_ToggleButton","TimerOff_default","Timer_default","paused","Pause_default","PlayArrow_default","onChangeField","setSessionTitle","components_TimeDisplay","justify","StartButton","PauseButton","Button","xs","components_TitleField","fontFamily","JSON","stringify","viewMap","flexGrow","gridItem","maxHeight","marginBottom","boxShadow","shadows","view","direction","xl","lg","md","sm","SessionsView","SettingsView","views_DebugView","views_TimerView","getView","actions","BottomNavigationAction_default","icon","AccessTime_default","icons_List_default","Settings_default","bottom","left","right","onNavChange","BottomNavigation_default","supportsPassive","opts","defineProperty","get","addEventListener","removeEventListener","e","PreventAccidentalClosure","confirmationMessage","returnValue","this","handleBeforeUnload","passive","Component","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","setState","_this$props","formattedTime","formattedEarnedSalary","components_TopNav","components_ViewLoader","components_BottomNav","bind","components_PreventAccidentalClosure","_ref$sessions","_ref$sessions$current","_ref$settings","height","flexDirection","red","main","lightGreen","breakNotifier","_store$getState","_store$getState$sessi","_store$getState$setti","registration","showNotification","body","image","badge","vibrate","tag","ReactGA","initialize","pageview","pathname","search","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","register","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","createStore","tomatoHours","applyMiddleware","timerMiddleware","subscribe","render","styles","createMuiTheme","es","CssBaseline_default","components_App","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1fcddfad.chunk.js","sourcesContent":["const logger = store => next => action => {\n  let result = next(action)\n  if (process.env.NODE_ENV === 'development') {\n    console.groupCollapsed(action.type) // eslint-disable-line\n    console.info('dispatching', action) // eslint-disable-line\n    console.log('next state', store.getState()) // eslint-disable-line\n    console.groupEnd(action.type) // eslint-disable-line\n  }\n  return result\n}\n\nexport default logger\n","import Raven from 'raven-js'\n\nif (process.env.NODE_ENV === 'production') Raven\n  .config('https://37814d2ed7654802807f3f1eb88446bc@sentry.io/178156')\n  .install()\n\nconst crashReporter = store => next => action => {\n  try {\n    return next(action)\n  } catch (err) {\n    if (process.env.NODE_ENV === 'production') {\n      Raven.captureException(err, {\n        extra: { action, state: store.getState() }\n      })\n    } else if (process.env.NODE_ENV === 'development') {\n      console.info('Exception caught') // eslint-disable-line\n      console.error(err) // eslint-disable-line\n    }\n    throw err\n  }\n}\n\nexport default crashReporter","import { START_TIMER, STOP_TIMER } from 'redux-timer-middleware'\n\n// Action types\n\n// Timer middleware\nexport const START_TIMER_MIDDLEWARE = START_TIMER\nexport const STOP_TIMER_MIDDLEWARE = STOP_TIMER\n\n// Session\nexport const PAUSE_SESSION = 'PAUSE_SESSION'\nexport const UNPAUSE_SESSION = 'UNPAUSE_SESSION'\nexport const END_SESSION = 'END_SESSION'\nexport const SET_SESSION_TITLE = 'SET_SESSION_TITLE'\nexport const DELETE_SESSION = 'DELETE_SESSION'\nexport const SET_BREAK_HAS_BEEN_NOTIFIED = 'SET_BREAK_HAS_BEEN_NOTIFIED'\nexport const SET_DISPLAY_EARNED_SALARY = 'SET_DISPLAY_EARNED_SALARY'\nexport const SET_HOURLY_RATE = 'SET_HOURLY_RATE'\n\n// Other constants\nexport const TIMER_NAME = 'TOMATO_TIMER'\nexport const SESSION_TICK = 'SESSION_TICK'\nexport const START_TOMATO_TIMER = 'START_TOMATO_TIMER'\n\n// Action creators\nexport const startTimerMiddleware = () => ({\n\ttype: START_TIMER_MIDDLEWARE,\n\tpayload: { actionName: SESSION_TICK, timerName: TIMER_NAME, earnedSalary:  SET_DISPLAY_EARNED_SALARY}\n})\nexport const stopTimerMiddleware = () => ({ type: STOP_TIMER_MIDDLEWARE, payload: { timerName: TIMER_NAME } })\nexport const pauseSession = () => ({ type: PAUSE_SESSION })\nexport const unpauseSession = () => ({ type: UNPAUSE_SESSION })\nexport const endSession = () => ({ type: END_SESSION })\nexport const setSessionTitle = value => ({ type: SET_SESSION_TITLE, payload: { value } })\nexport const deleteSession = value => ({ type: DELETE_SESSION, payload: { value } })\nexport const setBreakHasBeenNotified = () => ({ type: SET_BREAK_HAS_BEEN_NOTIFIED })\nexport const earnedSalary = value => ({ type: SET_DISPLAY_EARNED_SALARY, payload: { value } })\n","// Action types\nexport const SET_DISPLAY_EARNED_SALARY = 'SET_DISPLAY_EARNED_SALARY'\nexport const SET_HOURLY_RATE = 'SET_HOURLY_RATE'\nexport const SET_ENABLE_BREAKS = 'SET_ENABLE_BREAKS'\nexport const SET_ENABLE_NOTIFICATIONS = 'SET_ENABLE_NOTIFICATIONS'\nexport const SET_SESSION_DURATION = 'SET_SESSION_DURATION'\nexport const SET_REMEMBER_SETTINGS = 'SET_REMEMBER_SETTINGS'\nexport const SET_DISPLAY_ABOUT_DIALOG = 'SET_DISPLAY_ABOUT_DIALOG'\n\n// Action creators\nexport const setDisplayEarnedSalary = value => ({ type: SET_DISPLAY_EARNED_SALARY, payload: { value } })\nexport const setHourlyRate = value => ({ type: SET_HOURLY_RATE, payload: { value } })\nexport const setEnableBreaks = value => ({ type: SET_ENABLE_BREAKS, payload: { value }})\nexport const setRememberSettings = value => ({ type: SET_REMEMBER_SETTINGS, payload: { value } })\nexport const setEnableNotifications = value => ({ type: SET_ENABLE_NOTIFICATIONS, payload: { value } })\nexport const setSessionDuration = value => ({ type: SET_SESSION_DURATION, payload: { value } })\nexport const setDisplayAboutDialog = value => ({ type: SET_DISPLAY_ABOUT_DIALOG, payload: { value } })\n\nexport const settingActionCreators = {\n\tsetDisplayEarnedSalary,\n\tsetHourlyRate,\n\tsetEnableBreaks,\n\tsetRememberSettings,\n  setEnableNotifications,\n\tsetSessionDuration,\n\tsetDisplayAboutDialog\n}\n","import {\n  SET_DISPLAY_EARNED_SALARY,\n  SET_HOURLY_RATE,\n  SET_ENABLE_BREAKS,\n  SET_ENABLE_NOTIFICATIONS,\n  SET_SESSION_DURATION,\n  SET_REMEMBER_SETTINGS,\n  SET_DISPLAY_ABOUT_DIALOG\n} from './../actions'\n\nexport const defaultSettings = {\n  showEarnedSalary: false,\n  hourlyRate: 0,\n  rememberSettings: false,\n  sessionDuration: '',\n  enableBreaks: false,\n  notifications: false,\n  displayAboutDialog: false\n}\n\nexport default (state = defaultSettings, { type, payload }) => {\n  switch (type) {\n    case SET_DISPLAY_EARNED_SALARY: {\n      return {\n        ...state,\n        showEarnedSalary: payload.value\n      }\n    }\n    case SET_HOURLY_RATE: {\n      return {\n        ...state,\n        hourlyRate: Number(payload.value)\n      }\n    }\n    case SET_ENABLE_BREAKS: {\n      return {\n        ...state,\n        enableBreaks: payload.value\n      }\n    }\n    case SET_REMEMBER_SETTINGS: {\n      return {\n        ...state,\n        rememberSettings: payload.value\n      }\n    }\n    case SET_ENABLE_NOTIFICATIONS: {\n      return {\n        ...state,\n        notifications: payload.value\n      }\n    }\n    case SET_SESSION_DURATION: {\n      return {\n        ...state,\n        sessionDuration: payload.value\n      }\n    }\n    case SET_DISPLAY_ABOUT_DIALOG: {\n      return {\n        ...state,\n        displayAboutDialog: payload.value\n      }\n    }\n    default:\n      return state\n  }\n}","const validateParts = parts => parts.forEach(part => {\n  if (!part) throw Error(\"invalid part received\")\n  else {\n    Object.keys(part).forEach(key => {\n      if (!part[key] || part[key].constructor !== Date) {\n        throw Error(`invalid ${key}`, part[key])\n      }\n    })\n  }\n})\n\nexport const calculateEllapsedTime = (a, b) => {\n  validateParts([{ a, b }])\n  const [c, d] = [a, b].map(x => x.getTime() / 1000)\n  return Math.abs(d - c)\n}\n\nexport const reduceEllapsedTime = parts => {\n  if (!parts) throw Error(\"no parts received\")\n  if (parts.constructor !== Array) throw Error(\"array expected\")\n  validateParts(parts)\n  return parts.reduce((ellapsedTime, nextPart) =>\n    ellapsedTime + calculateEllapsedTime(nextPart.startTime, nextPart.stopTime),\n    0)\n}\n\nexport default reduceEllapsedTime\n","const getTimeFromHnMs = string => {\n  const [hours, minutes] = string.split(\":\")\n  const date = new Date()\n  date.setHours(hours)\n  date.setMinutes(minutes)\n  return date\n}\n\nexport default getTimeFromHnMs\n","import reduceEllapsedTime from './../helpers/reduce-ellapsed-time'\nimport getTimeFromHoursAndMinutes from './../helpers/get-time-from-hours-and-minutes'\nimport {\n  SESSION_TICK,\n  PAUSE_SESSION,\n  UNPAUSE_SESSION,\n  END_SESSION,\n  SET_SESSION_TITLE,\n  DELETE_SESSION,\n  SET_BREAK_HAS_BEEN_NOTIFIED,\n  SET_DISPLAY_EARNED_SALARY\n} from './../actions'\n\nexport const defaultSession = {\n  currentSession: {\n    title: '',\n    startTime: null,\n    EarnedSalary: 0,\n    breakHasBeenNotified: false,\n    ellapsedTime: 0,\n    parts: []\n  },\n  sessions: []\n}\n\nexport default (state = defaultSession, { type, payload }) => {\n  switch (type) {\n    // adds a new part to the current session with a startTime: new Date()\n    case SET_SESSION_TITLE: {\n      return {\n        ...state,\n        currentSession: {\n          ...state.currentSession,\n          title: payload.value\n        }\n      }\n    }\n    // resets currentSession and move startTime to a new sessionPart with a stopTime\n    case PAUSE_SESSION: {\n      return {\n        ...state,\n        // Reset currenSession to default\n        currentSession: {\n          ...defaultSession.currentSession,\n          title: state.currentSession.title,\n          // Temporarily display current ellapsedTime until a new one is calculated\n          ellapsedTime: state.currentSession.ellapsedTime,\n          parts: [\n            // Move the currentSession to sessions array\n            ...state.currentSession.parts,\n            ...(state.currentSession.startTime !== null\n              ? [\n                  {\n                    startTime: state.currentSession.startTime,\n                    stopTime: new Date()\n                  }\n                ]\n              : [])\n          ]\n        }\n      }\n    }\n    // unpauses currentSession or starts a new one\n    case UNPAUSE_SESSION: {\n      let startTime = new Date()\n\n      if (state.currentSession.parts.length === 0 && state.sessions.length === 0) {\n        if (window.location.hash.split('#').length === 2) {\n          startTime = new Date(getTimeFromHoursAndMinutes(window.location.hash.split('#')[1]))\n          window.history.replaceState(null, document.title, \"/\")\n        }\n      }\n\n      return {\n        ...state,\n        currentSession: {\n          // Temporary method of inputing startTime\n          ...state.currentSession,\n          parts: state.currentSession.parts,\n          breakHasBeenNotified: false,\n          startTime,\n          ellapsedTime: reduceEllapsedTime(state.currentSession.parts)\n        }\n      }\n    }\n    // updates the ellapsedTime\n    case SESSION_TICK: {\n      return {\n        ...state,\n        currentSession: {\n          ...state.currentSession,\n          // Re-calculate ellapsedTime\n          ellapsedTime: reduceEllapsedTime([\n            ...state.currentSession.parts,\n            {\n              startTime: state.currentSession.startTime,\n              stopTime: new Date()\n            }\n          ])\n        }\n      }\n    }\n    // moves the currentSession to a new a new session entry\n    case END_SESSION: {\n      return {\n        ...state,\n        ...defaultSession,\n        currentSession: defaultSession.currentSession,\n        sessions: [\n          ...state.sessions,\n          {\n            ...state.currentSession,\n            title: state.currentSession.title.trim()\n          }\n        ]\n      }\n    }\n\n    case SET_DISPLAY_EARNED_SALARY: {\n      return {\n        ...state,\n        currentSession: {\n          ...state.currentSession,\n          EarnedSalary: payload.value\n        } \n      }\n    }\n    // deletes the requested session\n    case DELETE_SESSION: {\n      return {\n        ...state,\n        sessions: state.sessions.filter((session, key) => key !== payload.value)\n      }\n    }\n    default: {\n      return state\n    }\n\n    case SET_BREAK_HAS_BEEN_NOTIFIED: {\n      return {\n        ...state,\n        currentSession: {\n          ...state.currentSession,\n          breakHasBeenNotified: true\n        }\n      }\n    }\n  }\n}\n","import { combineReducers } from 'redux'\nimport settings from './settings'\nimport sessions from './sessions'\n\nexport default combineReducers({ sessions, settings })\n","//@ts-check\nimport React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n// import Button from 'react-md/lib/Buttons/Button'\n\nconst styles = {}\n\nlet TopNav = ({ appName, classes }) => (\n  <AppBar\n    className={classes.root}\n    position=\"static\"\n    color=\"primary\">\n    <Toolbar>\n      <Typography variant=\"title\" color=\"inherit\">\n        {appName}\n      </Typography>\n    </Toolbar>\n  </AppBar>\n  // nav={<Button\n  //   key=\"nav\"\n  //   icon\n  //   onClick={() => ({})} >\n  //   {'menu'}\n  // </Button>}\n  // actions={<KebabMenu id=\"toolbar-prominent-kebab-menu\" />}\n)\n\nexport default withStyles(styles)(TopNav)\n","const modAndRound = (value, factor) => Math.floor(value % factor)\n\nexport const convertToValues = function(seconds = 0) {\n  const values = [ seconds ]\n  const factors = [ 60, 60, 24, 24 ]\n\n  for (let i = 0; i < factors.length; i++) {\n\t\tconst factor = factors[i]\n    if (i === factors.length - 1) break\n\t\tconst division = values[i] / factor\n\t\tif (modAndRound(division, factor) === 0 && values[i] === values[i] % factor) break\n\t\tvalues.push(division)\n    // else values.push(values[i])\n\t}\n\n  return values\n    .map((value, i) => modAndRound(value, factors[i]))\n}\n\nconst formatValues = function(values, filterZeros) {\n  const units = [ 's', 'm', 'h', 'd' ]\n\n  return filterZeros\n    ? values\n        .splice(0)\n        .map((x, unitIndex) => ({ x, unitIndex }))\n        .filter(\n          ({ x }, i) => (x > 0 || (i === 0 && values[1] <= 1))\n        )\n        .map(\n          ({ x, unitIndex }) => `${x}${units[unitIndex]}`\n        )\n        .reverse()\n        .join(' ')\n    : values\n\t\t\t\t.splice(0)\n\t\t\t\t.map((x, unitIndex) => ({ x, unitIndex }))\n\n        // .filter(({ x }, i) => x > 0 || i === 0)\n\t\t\t\t.map(\n          ({ x, unitIndex }) => `${x}${units[unitIndex]}`\n        )\n        .reverse()\n        .join(' ')\n}\n\nexport default (seconds, filterZeros = false) => seconds === 0 ? '0s' :\n  formatValues(convertToValues(seconds), filterZeros)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport List from '@material-ui/core/List'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n// import ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Avatar from 'react-md/lib/Avatars/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { deleteSession } from './../actions'\nimport reduceEllapsedTime from './../helpers/reduce-ellapsed-time'\nimport formatTime from './../helpers/format-time'\nimport byStartTime from './../helpers/by-start-time'\n\nlet SessionsList = ({ sessions, onDelete, ...props }) => (\n  <List subheader={<ListSubheader>Sessions</ListSubheader>} {...props}>\n    {sessions.length > 0 ? (\n      sessions\n        .sort(byStartTime())\n        .map(\n          ({ title, parts }, key) => (\n            <ListItem key={key}\n              threeLines\n              {...{ key }}>\n              <ListItemAvatar>\n                <Avatar>\n                  {title.length > 0 ? (\n                    title.slice(0, 1).toUpperCase()\n                  ) : (\n                      'U'\n                    )}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={\n                  title.length === 0 ? 'Untitled' : title\n                }\n                secondary={[\n                  parts &&\n                    parts[0] &&\n                    parts[0].startTime &&\n                    parts[0].startTime.constructor === Date\n                    ? moment(\n                      parts[0].startTime.getTime()\n                    ).format('lll')\n                    : 'Never',\n                  formatTime(reduceEllapsedTime(parts))\n                ].join('\\n')}\n              />\n              <ListItemSecondaryAction>\n                <IconButton aria-label=\"delete\" onClick={onDelete(key)}>\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          )\n        )\n    ) : (\n        <ListItem\n          disabled={true}\n          style={{\n            textAlign: 'center',\n            fontWeight: 'bold'\n          }}>\n          <ListItemText primary=\"No sessions yet. Why not start one?\" />\n        </ListItem>\n      )}\n  </List>\n)\n\nconst mapStateToProps = ({ sessions: { sessions } }) => ({\n  sessions\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: key => () => dispatch(deleteSession(key))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  SessionsList\n)\n","export default reversed => (a, b) => {\n  const [aT, bT] = [a, b].map(x => x.parts[0].startTime.getTime())\n  return reversed ? aT > bT : bT > aT\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\n\nimport Switch from '@material-ui/core/Switch'\n\nconst Setting = ({ value, label, onChange, Icon }) => (\n  <ListItem>\n    {Icon ? <ListItemIcon>{Icon}</ListItemIcon> : []}\n    <ListItemText primary={label} />\n    <ListItemSecondaryAction>\n      <Switch\n        onChange={({ target: { checked } }) =>\n          onChange(checked)\n        }\n        checked={value}\n      />\n    </ListItemSecondaryAction>\n  </ListItem>\n)\n\nSetting.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired\n}\n\nexport default Setting\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setDisplayAboutDialog } from './../actions'\nimport { version, author } from './../../package.json'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Button from '@material-ui/core/Button'\n\nlet AboutDialog = ({\n  onAboutDialogClose,\n  displayAboutDialog\n}) => (\n    <Dialog\n      open={displayAboutDialog}\n      onClose={onAboutDialogClose}\n      aria-labelledby=\"about-dialog-title\">\n      <DialogTitle id=\"aboutdialog-title\">\n        About Tomato Hours\n    </DialogTitle>\n      <List dense={true}>\n        <ListItem>\n          <ListItemText\n            primary=\"Version\"\n            secondary={version}\n          />\n        </ListItem>\n        <ListItem>\n          <ListItemText\n            primary=\"Author\"\n            secondary={\n              <span>\n                {author.name}{' '}\n                <a\n                  href={\n                    author.url +\n                    '/?utm_source=th-app&utm_medium=about-dialog'\n                  }\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\">\n                  {/* {'<'} */}\n                  {author.url}\n                  {/* {'>'} */}\n                </a>\n              </span>\n            }\n          />\n        </ListItem>\n      </List>\n      <div style={{ padding: '1rem' }}>\n        <Grid container alignContent=\"flex-end\" spacing={16}>\n          <Grid item>\n            <Button\n              element={'a'}\n              href={`mailto:${author.email\n                }?subject=Tomato Hours`}\n              variant=\"raised\"\n              color=\"primary\">\n              Contact author\n          </Button>\n          </Grid>\n          <Grid item>\n            <Button onClick={onAboutDialogClose}>\n              Close\n          </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </Dialog>\n  )\n\nconst mapStateToProps = ({\n  settings: { displayAboutDialog }\n}) => ({ displayAboutDialog })\n\nconst mapDispatchToProps = dispatch => ({\n  onAboutDialogClose: () =>\n    dispatch(setDisplayAboutDialog(false))\n})\n\nAboutDialog = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AboutDialog)\n\nexport default AboutDialog\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport ListItem from '@material-ui/core/ListItem'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Button from '@material-ui/core/Button'\nimport EarnedSalaryIcon from '@material-ui/icons/AttachMoney'\nimport BreaksIcon from '@material-ui/icons/WatchLater'\nimport NotificationsIcon from '@material-ui/icons/Feedback'\nimport Setting from './../components/Setting'\nimport AboutDialog from './../components/AboutDialog'\nimport {\n  settingActionCreators,\n  setDisplayAboutDialog\n} from './../actions'\n\nconst styles = theme => ({\n  root: {\n    paddingBottom: theme.spacing.unit,\n    backgroundColor: theme.palette.background.paper\n  },\n  textFieldIcon: {\n    color: '#757575'\n  },\n  showAboutDialogButton: {\n    display: 'block',\n    margin: 'auto'\n  }\n})\nconst SettingsList = ({\n  onSettingChange,\n  onAboutDialogOpen,\n  settings,\n  classes,\n  ...props\n}) => (\n    <div className={classes.root} {...props}>\n      <List\n        className=\"settings\"\n        subheader={<ListSubheader>Settings</ListSubheader>}>\n        <Setting\n          label=\"Display earned salary\"\n          value={settings.showEarnedSalary}\n          onChange={value =>\n            onSettingChange('setDisplayEarnedSalary', value)}\n          Icon={<EarnedSalaryIcon />}\n        />\n        {settings.showEarnedSalary ? (\n          <ListItem>\n            <TextField\n              label=\"Hourly rate\"\n              type=\"number\"\n              value={settings.hourlyRate}\n              placeholder=\"123\"\n              min={1}\n              onChange={({ target: { value } }) =>\n                onSettingChange('setHourlyRate', value)}\n            />\n          </ListItem>\n        ) : (\n            []\n          )}\n        <Setting\n          label=\"Enable breaks\"\n          value={settings.enableBreaks}\n          onChange={value =>\n            onSettingChange('setEnableBreaks', value)}\n          Icon={<BreaksIcon />}\n        />\n        {settings.enableBreaks ? (\n          <ListItem>\n            <TextField\n              label=\"Session duration\"\n              type=\"number\"\n              min=\"1\"\n              value={settings.sessionDuration}\n              placeholder=\"in minutes\"\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    minutes\n                  </InputAdornment>\n                )\n              }}\n              onChange={({ target: { value } }) =>\n                onSettingChange('setSessionDuration', value)}\n            />\n          </ListItem>\n        ) : (\n            []\n          )}\n        {settings.enableBreaks ? (\n          <Setting\n            label=\"Break notifications\"\n            value={settings.notifications}\n            onChange={checked =>\n              checked\n                ? Notification.requestPermission().then(\n                  result =>\n                    navigator.serviceWorker.ready.then(() =>\n                      onSettingChange(\n                        'setEnableNotifications',\n                        result === 'granted'\n                      )\n                    )\n                )\n                : onSettingChange(\n                  'setEnableNotifications',\n                  checked\n                )}\n            Icon={<NotificationsIcon />}\n          />\n        ) : (\n            []\n          )}\n        {/* Redisplay when remember settings is working */\n      /*\n\t\t\t<Setting\n\t\t\t\tlabel=\"Remember settings\"\n\t\t\t\tvalue={settings.rememberSettings}\n\t\t\tonChange={ value => onSettingChange(\"setRememberSettings\", value )} />\n\t\t*/}\n      </List>\n      <AboutDialog />\n    </div>\n  )\n\nSettingsList.propTypes = {\n  onSettingChange: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = ({ settings }) => ({\n  settings\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onSettingChange: (setting, value) =>\n    dispatch(settingActionCreators[setting](value)),\n  onAboutDialogOpen: () =>\n    dispatch(setDisplayAboutDialog(true))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  withStyles(styles)(SettingsList)\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport formatTime from './../helpers/format-time'\n\nlet EllapsedTime = ({\n  ellapsedTime,\n  notifications,\n  sessionDuration,\n  timeUntilBreak\n}) => (\n  <div>\n    <h1 style={{ textAlign: 'center' }}>\n      {formatTime(ellapsedTime) || '0s'}\n    </h1>\n    {notifications &&\n    sessionDuration > 0 &&\n    ellapsedTime > 0 ? (\n      <div\n        style={{\n          textAlign: 'center'\n        }}>\n        Time until break:{' '}\n        <span style={{ fontWeight: 'bold' }}>\n          {formatTime(timeUntilBreak, true) || '0s'}\n        </span>\n      </div>\n    ) : (\n      []\n    )}\n  </div>\n)\n\nconst mapStateToProps = ({\n  sessions: {\n    currentSession: { ellapsedTime }\n  },\n  settings: { notifications, sessionDuration }\n}) => ({\n  ellapsedTime,\n  notifications,\n  sessionDuration,\n  timeUntilBreak: Math.max(\n    sessionDuration * 60 - ellapsedTime,\n    0\n  )\n})\n\nEllapsedTime = connect(mapStateToProps)(EllapsedTime)\n\nexport default EllapsedTime\n","const calculateEarnedSalary = ({ ellapsedTime, hourlyRate }) => Math.ceil(ellapsedTime / 3600 * hourlyRate || 0)\n\nexport default calculateEarnedSalary\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport calculateEarnedSalary from './../helpers/calculate-earned-salary'\n\nconst EarnedSalary = ({ earnedSalary }) => {\n  return (\n    <div\n      style={{\n        textAlign: 'center'\n      }}>\n      <span>Earned salary: </span>\n      <span style={{ fontWeight: 'bold' }}>\n        {earnedSalary}\n      </span>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({\n  sessions: {\n    currentSession: { ellapsedTime }\n  },\n  settings: { hourlyRate }\n}) => ({\n  earnedSalary: calculateEarnedSalary({\n    ellapsedTime,\n    hourlyRate\n  })\n})\n\nexport default connect(mapStateToProps)(EarnedSalary)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport EllapsedTime from './EllapsedTime'\nimport EarnedSalary from './EarnedSalary'\n\nlet TimeDisplay = ({ showEarnedSalary, hourlyRate }) => (\n  <div>\n    <EllapsedTime />\n    {showEarnedSalary && hourlyRate && hourlyRate > 0 ? (\n      <EarnedSalary />\n    ) : (\n      []\n    )}\n  </div>\n)\n\nconst mapStateToProps = ({\n  settings: { showEarnedSalary, hourlyRate }\n}) => {\n  return {\n    showEarnedSalary,\n    hourlyRate\n  }\n}\n\nTimeDisplay = connect(mapStateToProps)(TimeDisplay)\n\nexport default TimeDisplay\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst ToggleButton = ({\n  primaryLabel,\n  secondaryLabel,\n  PrimaryIcon,\n  SecondaryIcon,\n  condition,\n  disabled,\n  onButtonClick\n}) => (\n  <Tooltip\n    id=\"tooltip-icon\"\n    title={condition ? primaryLabel : secondaryLabel}>\n    <div>\n      <Button\n        variant=\"fab\"\n        color={condition ? 'primary' : 'secondary'}\n        aria-label={\n          condition ? primaryLabel : secondaryLabel\n        }\n        disabled={disabled}\n        onClick={onButtonClick({ condition })}>\n        {condition ? PrimaryIcon : SecondaryIcon}\n      </Button>\n    </div>\n  </Tooltip>\n)\n\nexport default ToggleButton\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  startTimerMiddleware,\n  stopTimerMiddleware,\n  pauseSession,\n  unpauseSession,\n  endSession\n} from './../actions'\nimport ToggleButton from './ToggleButton'\nimport TimerOffIcon from '@material-ui/icons/TimerOff'\nimport TimerIcon from '@material-ui/icons/Timer'\n\nconst StartButton = ({ active, onButtonClick }) => {\n  return (\n    <ToggleButton\n      PrimaryIcon={<TimerOffIcon />}\n      SecondaryIcon={<TimerIcon />}\n      primaryLabel={'End session'}\n      secondaryLabel={'Begin session'}\n      condition={active}\n      onButtonClick={onButtonClick}\n    />\n  )\n}\n\nconst mapStateToProps = ({\n  sessions: {\n    currentSession: { startTime, parts }\n  }\n}) => ({\n  active: startTime !== null || parts.length > 0\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onButtonClick: ({ condition }) => () => {\n    condition\n      ? dispatch(pauseSession()) &&\n        dispatch(endSession()) &&\n        dispatch(stopTimerMiddleware())\n      : dispatch(unpauseSession()) &&\n        dispatch(startTimerMiddleware())\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StartButton)\n","//@ts-check\nimport React from 'react'\nimport ToggleButton from './ToggleButton'\nimport { connect } from 'react-redux'\nimport {\n  startTimerMiddleware,\n  stopTimerMiddleware,\n  pauseSession,\n  unpauseSession\n} from './../actions'\nimport PauseIcon from '@material-ui/icons/Pause'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\n\nconst PauseButton = ({\n  paused,\n  disabled,\n  onButtonClick\n}) => (\n  <ToggleButton\n    PrimaryIcon={<PauseIcon />}\n    SecondaryIcon={<PlayArrowIcon />}\n    primaryLabel={'Pause session'}\n    secondaryLabel={'Continue session'}\n    condition={!paused}\n    disabled={disabled}\n    onButtonClick={onButtonClick}\n  />\n)\n\nconst mapStateToProps = ({\n  sessions: {\n    currentSession: { startTime, parts }\n  }\n}) => ({\n  paused: startTime === null && parts.length > 0,\n  disabled: startTime === null && parts.length === 0\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onButtonClick: ({ condition }) => () => {\n    condition\n      ? dispatch(pauseSession()) &&\n        dispatch(stopTimerMiddleware())\n      : dispatch(unpauseSession()) &&\n        dispatch(startTimerMiddleware())\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PauseButton)\n","//@ts-check\nimport React from 'react'\nimport { connect } from 'react-redux'\n// import TextField from 'react-md/lib/TextFields/TextField'\nimport { setSessionTitle } from './../actions'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\n\nconst styles = {\n  root: {}\n}\nlet TitleField = ({ title, onChangeField, classes }) => (\n  <TextField\n    label=\"Title\"\n    id=\"title-field\"\n    value={title}\n    onChange={onChangeField}\n  />\n)\n\nconst mapStateToProps = ({\n  sessions: {\n    currentSession: { title }\n  }\n}) => ({ title })\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeField: ({ target: { value } }) =>\n    dispatch(setSessionTitle(value))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(TitleField))\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport TimeDisplay from './../components/TimeDisplay'\nimport StartButton from './../components/StartButton'\nimport PauseButton from './../components/PauseButton'\nimport TitleField from './../components/TitleField'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  root: {\n    padding: 4 * theme.spacing.unit\n  }\n})\n\nconst TimerView = ({ classes, ...props }) => (\n  <div className={classes.root} {...props}>\n    <TimeDisplay />\n    <Grid container justify=\"space-evenly\" spacing={24}>\n      {[\n        StartButton,\n        PauseButton\n      ].map((Button, key) => (\n        <Grid key={key} item xs={3}>\n\t\t\t\t\t<Button />\n        </Grid>\n      ))}\n      <Grid container justify=\"center\">\n        <Grid item>\n          <TitleField />\n        </Grid>\n      </Grid>\n    </Grid>\n  </div>\n)\n\nexport default withStyles(styles)(TimerView)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nlet DebugView = ({ store, ...props }) => (\n  <code {...props}>\n    <pre\n      style={{\n        fontFamily: 'Consolas',\n        margin: 0\n      }}>\n      {JSON.stringify(store, null, 2)}\n    </pre>\n  </code>\n)\n\nconst mapStateToProps = store => ({ store })\n\nexport default connect(mapStateToProps)(DebugView)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport SessionsView from './../views/SessionsView'\nimport SettingsView from './../views/SettingsView'\nimport TimerView from './../views/TimerView'\nimport DebugView from './../views/DebugView'\n\nconst viewMap = [\n  'TimerView',\n  'SessionsView',\n  'SettingsView'\n]\n\nif (process.env.NODE_ENV === 'development')\n  viewMap.push('DebugView')\n\nconst getView = view => {\n  switch (viewMap[view]) {\n    case 'SessionsView': {\n      return <SessionsView />\n    }\n    case 'SettingsView': {\n      return <SettingsView />\n    }\n    case 'DebugView': {\n      return <DebugView />\n    }\n    case 'TimerView':\n    default: {\n      return <TimerView />\n    }\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    display: 'block'\n  },\n  gridItem: {\n    margin: 'auto',\n    maxHeight: '',\n    marginBottom: '56px',\n    backgroundColor: 'white',\n    boxShadow: theme.shadows[1]\n  }\n})\n\nconst ViewLoader = ({ view, classes }) => (\n  <Grid\n    container\n    direction=\"row\"\n    justify=\"center\"\n    spacing={0}\n    className={classes.root}>\n    <Grid\n      item\n      className={classes.gridItem}\n      xl={4}\n      lg={4}\n      md={12}\n      sm={12}\n      xs={12}>\n      {getView(view)}\n    </Grid>\n  </Grid>\n)\n\nViewLoader.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(ViewLoader)\n","import React from 'react'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\nimport ListIcon from '@material-ui/icons/List'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport CodeIcon from '@material-ui/icons/Code'\nimport { withStyles } from '@material-ui/core'\n\nconst actions = [\n  <BottomNavigationAction\n    key=\"timer\"\n    label=\"Timer\"\n    icon={<AccessTimeIcon />}\n  />,\n  <BottomNavigationAction\n    key=\"sessions\"\n    label=\"Sessions\"\n    icon={<ListIcon />}\n  />,\n  <BottomNavigationAction\n    key=\"settings\"\n    label=\"Settings\"\n    icon={<SettingsIcon />}\n  />\n]\n\nif (process.env.NODE_ENV === 'development') {\n  actions.push(\n    <BottomNavigationAction\n      key=\"debug\"\n      label=\"Debug\"\n      icon={<CodeIcon />}\n    />\n  )\n}\n\nconst styles = {\n  root: {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0\n  }\n}\n\nconst BottomNav = ({ view, onNavChange, classes }) => (\n  <BottomNavigation\n    className={classes.root}\n    value={view}\n    onChange={onNavChange}>\n    {actions}\n  </BottomNavigation>\n)\nexport default withStyles(styles)(BottomNav)\n","let supportsPassive = false\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function() {\n      return (supportsPassive = true)\n    }\n  })\n  window.addEventListener('testPassive', null, opts)\n  window.removeEventListener('testPassive', null, opts)\n} catch (e) {}\n\nexport default supportsPassive\n","//@ts-check\n\nimport { Component } from 'react'\nimport supportsPassive from './../helpers/supports-passive'\n\nconst event = 'beforeunload'\n\nclass PreventAccidentalClosure extends Component {\n  handleBeforeUnload(e) {\n    const confirmationMessage =\n      'The timer is still running. Are you sure you want to quit?'\n    e.returnValue = confirmationMessage\n    return confirmationMessage\n  }\n  componentDidMount() {\n    const { addEventListener } = this.props\n    addEventListener(\n      event,\n      this.handleBeforeUnload,\n      supportsPassive ? { passive: true } : false\n    )\n  }\n  componentWillUnmount() {\n    const { removeEventListener } = this.props\n    removeEventListener(event, this.handleBeforeUnload)\n  }\n  render() {\n    return null\n  }\n}\n\nexport default PreventAccidentalClosure\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport TopNav from './TopNav'\nimport { withStyles } from '@material-ui/core/styles'\nimport ViewLoader from './ViewLoader'\nimport BottomNav from './BottomNav'\nimport PreventAccidentalClosure from './PreventAccidentalClosure'\nimport formatTime from './../helpers/format-time'\nimport calculateEarnedSalary from './../helpers/calculate-earned-salary'\n\nconst appName = 'Tomato Hours'\n\nconst styles = () => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  }\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      view: 0\n    }\n  }\n  onNavChange(event, view) {\n    this.setState({ view })\n  }\n  render() {\n    const {\n      active,\n      ellapsedTime,\n      showEarnedSalary,\n      hourlyRate\n    } = this.props\n    const formattedTime =\n      ellapsedTime > 0\n        ? `${formatTime(ellapsedTime)}`\n        : appName\n    const formattedEarnedSalary =\n      showEarnedSalary && hourlyRate\n        ? ` | ${calculateEarnedSalary({\n            ellapsedTime,\n            hourlyRate\n          })}`\n        : ''\n    return (\n      <div className={this.props.classes.root}>\n        <title>\n          {formattedTime}\n          {formattedEarnedSalary}\n        </title>\n        <TopNav appName={appName} />\n        <ViewLoader view={this.state.view} />\n        <BottomNav\n          view={this.state.view}\n          onNavChange={this.onNavChange.bind(this)}\n        />\n        {active && process.env.NODE_ENV === 'production' ? (\n          <PreventAccidentalClosure\n            {...{\n              addEventListener: window.addEventListener.bind(\n                window\n              ),\n              removeEventListener: window.removeEventListener.bind(\n                window\n              )\n            }}\n          />\n        ) : (\n          []\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  sessions: {\n    currentSession: { startTime, parts, ellapsedTime },\n    sessions\n  },\n  settings: { showEarnedSalary, hourlyRate }\n}) => ({\n  active:\n    startTime !== null ||\n    parts.length > 0 ||\n    sessions.length > 0,\n  ellapsedTime,\n  showEarnedSalary,\n  hourlyRate\n})\n\nexport default connect(mapStateToProps)(\n  withStyles(styles)(App)\n)\n","import 'react-md/dist/react-md.red-teal.min.css'\nimport 'roboto-fontface/css/roboto/roboto-fontface.css'\nimport red from '@material-ui/core/colors/red'\nimport lightGreen from '@material-ui/core/colors/lightGreen'\nimport './index.css'\n\nexport default {\n  palette: {\n    primary: red,\n    secondary: {\n      main: lightGreen[700]\n    }\n  }\n}\n","import formatTime from './format-time'\n\nconst breakNotifier = ({ store, navigator, calculateEllapsedTime, Date, setBreakHasBeenNotified }) => {\n\tconst {\n\t\tsessions: { currentSession: { startTime, breakHasBeenNotified } },\n\t\tsettings: { sessionDuration, notifications }\n\t} = store.getState()\n\n\tif (startTime) {\n\t\tconst ellapsedTime = calculateEllapsedTime(startTime, new Date())\n\n\t\tif (ellapsedTime > sessionDuration * 60 && notifications && !breakHasBeenNotified) {\n\t\t\tnavigator.serviceWorker.ready.then(registration =>\n\t\t\t\tregistration.showNotification('Time for a break!', {\n\t\t\t\t\tbody: `It is ${formatTime(ellapsedTime, true)} since you last took one.`,\n\t\t\t\t\ticon: 'time-tracker.svg',\n\t\t\t\t\timage: 'time-tracker.svg',\n\t\t\t\t\tbadge: 'time-tracker-badge.png',\n\t\t\t\t\tvibrate: [ 250, 250, 250, 250 ],\n\t\t\t\t\ttag: 'break-notification'\n\t\t\t\t})\n\t\t\t)\n\t\t\tstore.dispatch(setBreakHasBeenNotified())\n\t\t}\n\t}\n}\n\nexport default breakNotifier\n","import ReactGA from 'react-ga'\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize(\"UA-114113941-1\")\n  ReactGA.pageview(window.location.pathname + window.location.search)\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${\n        process.env.PUBLIC_URL\n      }/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\n                'New content is available; please refresh.'\n              )\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\n                'Content is cached for offline use.'\n              )\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\n        'Error during service worker registration:',\n        error\n      )\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers\n          .get('content-type')\n          .indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport timerMiddleware from 'redux-timer-middleware'\nimport logger from './helpers/logger'\nimport crashReporter from './helpers/crash-reporter'\nimport tomatoHours from './reducers'\nimport App from './components/App'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport theme from './theme'\nimport { calculateEllapsedTime } from './helpers/reduce-ellapsed-time'\nimport { setBreakHasBeenNotified } from './actions'\nimport breakNotifier from './helpers/break-notifier'\nimport './helpers/analytics'\nimport {\n  MuiThemeProvider,\n  createMuiTheme\n} from '@material-ui/core/styles'\nimport * as serviceWorker from './serviceWorker'\n\nconst store = createStore(\n  tomatoHours,\n  applyMiddleware(crashReporter, logger, timerMiddleware)\n)\n\nstore.subscribe(() =>\n  breakNotifier({\n    store,\n    navigator,\n    Date,\n    calculateEllapsedTime,\n    setBreakHasBeenNotified\n  })\n)\n\nrender(\n  <MuiThemeProvider theme={createMuiTheme(theme)}>\n    <Provider store={store}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </Provider>\n  </MuiThemeProvider>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()\n"],"sourceRoot":""}